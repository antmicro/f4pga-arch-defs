// Here are all verilog simulation modules generated by v2x. This file should
// be generated! Its now here only for test purposes.

(* whitebox *)
module MUX2(I0, I1, S0, O);
	input wire I0;
	input wire I1;
	input wire S0;
	output wire O;

	assign O = S0 ? I1 : I0;
endmodule

// ============================================================================

(* whitebox *)
module NOT (I, O);
  input  wire I;
  (* DELAY_CONST_I="1e-10" *)
  output wire O;

  assign O = ~I;

endmodule

(* whitebox *)
module MUX(I0, I1, S, O);

	input wire I0;
	input wire I1;

	input wire S;

	output wire O;

	MUX2 mux (
		.I0(I0),
		.I1(I1),
		.S0(S),
		.O(O)
	);
endmodule

(* whitebox *)
module FF(clk, D, S, R, E, Q);
	input wire clk;
	(* SETUP="clk 10e-12" *) (* NO_COMB *)
	input wire D;
	(* SETUP="clk 10e-12" *) (* NO_COMB *)
	input wire E;
	(* SETUP="clk 10e-12" *) (* NO_COMB *)
	input wire S;
	(* SETUP="clk 10e-12" *) (* NO_COMB *)
	input wire R;
	(* CLK_TO_Q = "clk 10e-12" *)
	output reg Q;
	always @(posedge clk or posedge S or posedge R) begin
		if (S)
			Q <= 1'b1;
		else if (R)
			Q <= 1'b0;
		else if (E)
			Q <= D;
	end
endmodule

