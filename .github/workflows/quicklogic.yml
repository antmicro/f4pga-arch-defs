name: QuickLogic

on:
  push:
  pull_request:
    branches: [ master ]

jobs:

  code-quality:

    runs-on: ubuntu-18.04
    steps:

      - uses: actions/checkout@v2
        with:
          lfs: 'true'
          submodules: true

      - name: Environment
        env:
          CI: TEST
        run: |
          sudo rm -rf /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          sudo apt update
          sudo apt install -y g++-8 gcc-8 colordiff coreutils graphviz inkscape make git git-lfs unzip cmake

          mkdir .tmp
          curl -L https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-linux.zip -o .tmp/ninja-linux.zip
          unzip .tmp/ninja-linux.zip -d .tmp

          export PATH=$PATH:$PWD/.tmp
          export ROOT=$(pwd)
          export CMAKE_FLAGS="-GNinja"

          make env

          echo "PATH=${PATH}" >> $GITHUB_ENV
          echo "ROOT=${ROOT}" >> $GITHUB_ENV

      - name: Code Formatting
        run: |
          cd ${ROOT}/build
          source ../env/conda/bin/activate symbiflow_arch_def_base
          ninja -j$(nproc) check_python
          ninja -j$(nproc) lint_python

  ci:
    runs-on: ubuntu-18.04
    steps:

      - uses: actions/checkout@v2
        with:
          lfs: 'true'
          submodules: true

      - name: Environment
        env:
          CI: TEST
        run: |
          sudo rm -rf /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
          sudo apt update
          sudo apt install -y g++-8 gcc-8 colordiff coreutils graphviz inkscape make git git-lfs unzip cmake

          mkdir .tmp
          curl -L https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-linux.zip -o .tmp/ninja-linux.zip
          unzip .tmp/ninja-linux.zip -d .tmp

          export VPR_NUM_WORKERS=$(nproc)
          export PATH=$PATH:$PWD/.tmp
          export ROOT=$(pwd)
          export INSTALL_DIR=quicklogic-arch-defs
          export CMAKE_FLAGS="-GNinja -DINSTALL_FAMILIES=qlf_k4n8,qlf_k6n10,pp3 -DCMAKE_INSTALL_PREFIX=${ROOT}/${INSTALL_DIR}"

          mkdir ${ROOT}/${INSTALL_DIR}
          make env

          echo "VPR_NUM_WORKERS=${VPR_NUM_WORKERS}" >> $GITHUB_ENV
          echo "PATH=${PATH}" >> $GITHUB_ENV
          echo "ROOT=${ROOT}" >> $GITHUB_ENV
          echo "INSTALL_DIR=${INSTALL_DIR}" >> $GITHUB_ENV

      - name: QuickLogic Tests
        run: |
          cd ${ROOT}/build
          source ../env/conda/bin/activate symbiflow_arch_def_base
          ninja -j$(nproc) all_quicklogic_tests

      - name: Installation
        run: |
          cd ${ROOT}/build
          source ../env/conda/bin/activate symbiflow_arch_def_base
          ninja install -j$(nproc)

      - name: Toolchain tests
        run: |
          cd ${ROOT}/build
          source ../env/conda/bin/activate symbiflow_arch_def_base
          export CTEST_OUTPUT_ON_FAILURE=1
          ctest --no-tests=error -R quicklogic_toolchain_test_.*

      - name: Packaging
        run: |
          cd ${ROOT}
          export GITHASH=$(git rev-parse --short HEAD)
          tar -acf quicklogic-arch-defs-qlf-${GITHASH}.tar.gz ${INSTALL_DIR}/*

      - uses: actions/upload-artifact@v2
        with:
          name: ql-arch-definitions
          path: |
              quicklogic-arch-defs-qlf*.tar.gz

  upload-architectures:
    runs-on: ubuntu-18.04
    needs: [code-quality, ci]
    steps:

      - uses: actions/download-artifact@v2
      - name: Upload achitectures to bucket
        if: "github.event_name == 'push' && !startsWith(github.ref, 'dependabot/')"

        uses: weslenng/gcp-storage-sync@master
        env:
          GCP_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_FILE }}
          GCP_STORAGE_BUCKET: ${{ secrets.GCP_STORAGE_BUCKET }}
          SOURCE_DIR: "ql-arch-definitions"

      - name: Generate latest file
        run: |
          export FILE=$(ls ql-arch-definitions)
          echo "https://storage.googleapis.com/symbiflow-arch-defs-install/${FILE}" > latest-qlf
      - uses: actions/upload-artifact@v2
        with:
          name: latest-package
          path: |
            latest-qlf

  upload-latest:
    runs-on: ubuntu-18.04
    needs: [code-quality, ci, upload-architectures]
    steps:

      - uses: actions/download-artifact@v2
      - name: Upload latest file to bucket
        if: github.event_name == 'push'

        uses: weslenng/gcp-storage-sync@master
        env:
          GCP_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_FILE }}
          GCP_STORAGE_BUCKET: ${{ secrets.GCP_STORAGE_BUCKET }}
          SOURCE_DIR: "latest-package"
